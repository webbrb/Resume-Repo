buildscript {
    repositories {
        jcenter()
    }
}

//plugins {
//    id 'com.github.johnrengelman.shadow' version '5.1.0'
//}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'eclipse'


mainClassName = 'edu.wofford.wocoin.main.Main'

repositories {
    jcenter()
}

jar {
    baseName = rootProject.name
    manifest {
        attributes 'Main-Class': application.mainClassName

    }
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        html {
            enabled true
        }
    }
 
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['edu/wofford/wocoin/Utilities**',
                                        'edu/wofford/wocoin/main/**'])
        }))
    }
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.slf4j:slf4j-api:1.7.26'
    compile 'com.github.mkolisnyk:cucumber-runner:1.3.4'
    compile 'org.xerial:sqlite-jdbc:3.27.2.1'
    compile 'org.beryx:text-io:3.3.0'
    compile 'org.web3j:core:4.2.0'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.4'

    testImplementation 'io.cucumber:cucumber-java:4.3.1'
}

run {
    standardInput = System.in
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'html:build/reports/cucumber', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

